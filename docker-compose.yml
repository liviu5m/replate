version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: replate-postgres
    restart: always
    environment:
      POSTGRES_DB: replate
      POSTGRES_USER: replate_user
      POSTGRES_PASSWORD: replate_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - replate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replate_user -d replate"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Java Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: replate-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/replate
      SPRING_DATASOURCE_USERNAME: replate_user
      SPRING_DATASOURCE_PASSWORD: replate_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      
      # Server configuration
      SERVER_PORT: 8080
      
      # CORS configuration (allow frontend)
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
      
      # JWT configuration (you may want to use a more secure secret in production)
      JWT_SECRET: your-jwt-secret-key-here-make-it-long-and-secure
      JWT_EXPIRATION: 86400000
      
      # Mail configuration (optional - configure if using email features)
      # SPRING_MAIL_HOST: smtp.gmail.com
      # SPRING_MAIL_PORT: 587
      # SPRING_MAIL_USERNAME: your-email@gmail.com
      # SPRING_MAIL_PASSWORD: your-app-password
      
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - replate-network
    volumes:
      - ./backend:/app
      - maven_cache:/root/.m2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Vite Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: replate-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      # Vite configuration
      VITE_API_BASE_URL: http://localhost:8080
      VITE_APP_TITLE: Replate
      
      # Development configuration
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - replate-network
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  maven_cache:
    driver: local

networks:
  replate-network:
    driver: bridge
